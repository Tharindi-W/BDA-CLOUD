name: MediTrack CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Install Minikube and Dependencies
    - name: Install Minikube and Dependencies
      run: |
        # Update packages
        sudo apt-get update

        # Install required dependencies
        sudo apt-get install -y apt-transport-https curl

        # Install Docker
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

        # Add the user to the Docker group
        sudo usermod -aG docker $USER

        # Install Minikube
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/local/bin/
        minikube version

    # Step 3: Start Minikube
    - name: Start Minikube
      run: |
        minikube start --driver=none
        eval $(minikube docker-env)

    # Step 4: Build and Tag Docker Images
    - name: Build Docker Images
      run: |
        for service in AppointmentSchedulingService NotificationService PatientRecordService AnalyticsService RedshiftAnalyticsService; do
          docker build -t $service:latest ./services/$service/docker/
        done

    # Step 5: Push Images to Minikube
    - name: Push Images to Minikube
      run: |
        for service in AppointmentSchedulingService NotificationService PatientRecordService AnalyticsService RedshiftAnalyticsService; do
          docker tag $service:latest localhost:5000/$service:latest
          docker push localhost:5000/$service:latest
        done

    # Step 6: Apply Kubernetes Manifests
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f ./services/AppointmentSchedulingService/manifests/
        kubectl apply -f ./services/NotificationService/manifests/
        kubectl apply -f ./services/PatientRecordService/manifests/
        kubectl apply -f ./services/AnalyticsService/manifests/
        kubectl apply -f ./services/RedshiftAnalyticsService/manifests/
        kubectl apply -f ./ingress/

    # Step 7: Run Integration Tests
    - name: Run Integration Tests
      run: |
        pytest ./tests/integration/
